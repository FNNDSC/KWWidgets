/*=========================================================================

  Module:    $RCSfile: vtkKWWidgetWithScrollbarsSubclass.cxx.in,v $

  Copyright (c) Kitware, Inc.
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
#include "vtkKWApplication.h"
#include "@WidgetType@WithScrollbars.h"
#include "vtkObjectFactory.h"
#include "vtkKWScrollbar.h"
#include "@WidgetType@.h"

#include <vtksys/stl/string>

//----------------------------------------------------------------------------
vtkStandardNewMacro(@WidgetType@WithScrollbars);
vtkCxxRevisionMacro(@WidgetType@WithScrollbars, "$Revision: 1.3 $");

//----------------------------------------------------------------------------
@WidgetType@WithScrollbars::@WidgetType@WithScrollbars()
{
  this->Widget = @WidgetType@::New();
}

//----------------------------------------------------------------------------
@WidgetType@WithScrollbars::~@WidgetType@WithScrollbars()
{
  if (this->Widget)
    {
    this->Widget->Delete();
    this->Widget = NULL;
    }
}

//----------------------------------------------------------------------------
@WidgetType@* @WidgetType@WithScrollbars::GetWidget()
{
  return this->Widget;
}

//----------------------------------------------------------------------------
void @WidgetType@WithScrollbars::Create(vtkKWApplication *app)
{
  // Check if already created

  if (this->IsCreated())
    {
    vtkErrorMacro(<< this->GetClassName() << " already created");
    return;
    }

  // Call the superclass to create the whole widget

  this->Superclass::Create(app);

  // Create the widget

  this->Widget->SetParent(this);
  this->Widget->Create(app);
  if (!this->Widget->IsCreated())
    {
    vtkErrorMacro(<< this->GetClassName() << " failed creating @WidgetType@");
    return;
    }

  // Now that we have been created, make sure we are associated to
  // the scrollbars created by the super, *if any*

  this->AssociateVerticalScrollbarToWidget(this->Widget);
  this->AssociateHorizontalScrollbarToWidget(this->Widget);

  // Pack

  this->Pack();

  // Update enable state

  this->UpdateEnableState();
}

//----------------------------------------------------------------------------
void @WidgetType@WithScrollbars::CreateVerticalScrollbar(vtkKWApplication *app)
{
  this->Superclass::CreateVerticalScrollbar(app);
  this->AssociateVerticalScrollbarToWidget(this->Widget);
}

//----------------------------------------------------------------------------
void @WidgetType@WithScrollbars::CreateHorizontalScrollbar(vtkKWApplication *app)
{
  this->Superclass::CreateHorizontalScrollbar(app);
  this->AssociateHorizontalScrollbarToWidget(this->Widget);
}

//----------------------------------------------------------------------------
void @WidgetType@WithScrollbars::Pack()
{
  this->PackScrollbarsWithWidget(this->Widget);
}

//----------------------------------------------------------------------------
void @WidgetType@WithScrollbars::UpdateEnableState()
{
  this->Superclass::UpdateEnableState();

  this->PropagateEnableState(this->Widget);
}

//----------------------------------------------------------------------------
void @WidgetType@WithScrollbars::PrintSelf(ostream& os, vtkIndent indent)
{
  this->Superclass::PrintSelf(os,indent);
  os << indent << "Widget: ";
  if (this->Widget)
    {
    os << this->Widget << endl;
    }
  else
    {
    os << "(None)" << endl;
    }
}
